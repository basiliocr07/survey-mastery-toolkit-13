
@model SurveyApp.Web.Models.CreateSurveyViewModel
@{
    ViewData["Title"] = "Create Survey";
}

<div class="container mt-4">
    <h1>@(Model.Id > 0 ? "Edit" : "Create") Survey</h1>
    
    <form asp-action="Create" method="post">
        <input type="hidden" asp-for="Id" />
        
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Survey Details</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Title" class="form-label">Title</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Description" class="form-label">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Status" class="form-label">Status</label>
                    <select asp-for="Status" class="form-select">
                        <option value="draft">Draft</option>
                        <option value="active">Active</option>
                        <option value="archived">Archived</option>
                    </select>
                </div>
            </div>
        </div>
        
        <!-- Questions section -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Questions</h5>
                <button type="button" id="addQuestion" class="btn btn-primary btn-sm">Add Question</button>
            </div>
            <div class="card-body">
                <div id="questionsContainer">
                    @for (var i = 0; i < Model.Questions.Count; i++)
                    {
                        <div class="question-item card mb-3">
                            <div class="card-body">
                                <input type="hidden" name="Questions[@i].Id" value="@Model.Questions[i].Id" />
                                
                                <div class="mb-3">
                                    <label class="form-label">Question Title</label>
                                    <input type="text" class="form-control" name="Questions[@i].Title" value="@Model.Questions[i].Title" required />
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Question Type</label>
                                    <select class="form-select question-type" name="Questions[@i].Type" data-index="@i">
                                        <option value="text" @(Model.Questions[i].Type == "text" ? "selected" : "")>Text</option>
                                        <option value="single-choice" @(Model.Questions[i].Type == "single-choice" ? "selected" : "")>Single Choice</option>
                                        <option value="multiple-choice" @(Model.Questions[i].Type == "multiple-choice" ? "selected" : "")>Multiple Choice</option>
                                        <option value="rating" @(Model.Questions[i].Type == "rating" ? "selected" : "")>Rating</option>
                                    </select>
                                </div>
                                
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="Questions[@i].Required" value="true" @(Model.Questions[i].Required ? "checked" : "") />
                                        <label class="form-check-label">Required</label>
                                    </div>
                                </div>
                                
                                <div class="options-container @(Model.Questions[i].Type == "text" || Model.Questions[i].Type == "rating" ? "d-none" : "")">
                                    <label class="form-label">Options</label>
                                    <div class="options-list">
                                        @if (Model.Questions[i].Options != null)
                                        {
                                            @for (var j = 0; j < Model.Questions[i].Options.Count; j++)
                                            {
                                                <div class="input-group mb-2">
                                                    <input type="text" class="form-control" name="Questions[@i].Options[@j]" value="@Model.Questions[i].Options[j]" />
                                                    <button type="button" class="btn btn-outline-danger remove-option">Remove</button>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <button type="button" class="btn btn-outline-secondary btn-sm add-option mt-2">Add Option</button>
                                </div>
                                
                                <div class="d-flex justify-content-end mt-3">
                                    <button type="button" class="btn btn-outline-danger btn-sm remove-question">Remove Question</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                @if (Model.Questions.Count == 0)
                {
                    <div class="alert alert-info">
                        No questions added yet. Click "Add Question" to start building your survey.
                    </div>
                }
            </div>
        </div>
        
        <!-- Delivery Settings -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Delivery Settings</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Delivery Type</label>
                    <select class="form-select" id="deliveryType" name="DeliveryConfig.Type">
                        <option value="manual" @(Model.DeliveryConfig?.Type == "manual" ? "selected" : "")>Manual (Send via email)</option>
                        <option value="scheduled" @(Model.DeliveryConfig?.Type == "scheduled" ? "selected" : "")>Scheduled</option>
                        <option value="trigger" @(Model.DeliveryConfig?.Type == "trigger" ? "selected" : "")>Event Triggered</option>
                    </select>
                </div>
                
                <div id="emailAddresses" class="@(Model.DeliveryConfig?.Type == "manual" ? "" : "d-none")">
                    <label class="form-label">Email Addresses</label>
                    <div id="emailList">
                        @if (Model.DeliveryConfig?.EmailAddresses != null)
                        {
                            @for (var i = 0; i < Model.DeliveryConfig.EmailAddresses.Count; i++)
                            {
                                <div class="input-group mb-2">
                                    <input type="email" class="form-control" name="DeliveryConfig.EmailAddresses[@i]" value="@Model.DeliveryConfig.EmailAddresses[i]" />
                                    <button type="button" class="btn btn-outline-danger remove-email">Remove</button>
                                </div>
                            }
                        }
                    </div>
                    <div class="input-group mb-2">
                        <input type="email" id="newEmail" class="form-control" placeholder="Enter email address" />
                        <button type="button" class="btn btn-outline-primary" id="addEmail">Add</button>
                    </div>
                </div>
                
                <div id="scheduleSettings" class="@(Model.DeliveryConfig?.Type == "scheduled" ? "" : "d-none")">
                    <h6 class="mt-3">Schedule Settings</h6>
                    <div class="mb-3">
                        <label class="form-label">Frequency</label>
                        <select class="form-select" name="DeliveryConfig.Schedule.Frequency">
                            <option value="daily" @(Model.DeliveryConfig?.Schedule?.Frequency == "daily" ? "selected" : "")>Daily</option>
                            <option value="weekly" @(Model.DeliveryConfig?.Schedule?.Frequency == "weekly" ? "selected" : "")>Weekly</option>
                            <option value="monthly" @(Model.DeliveryConfig?.Schedule?.Frequency == "monthly" ? "selected" : "")>Monthly</option>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Day of Month</label>
                        <input type="number" class="form-control" name="DeliveryConfig.Schedule.DayOfMonth" value="@(Model.DeliveryConfig?.Schedule?.DayOfMonth ?? 1)" min="1" max="31" />
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Time</label>
                        <input type="time" class="form-control" name="DeliveryConfig.Schedule.Time" value="@(Model.DeliveryConfig?.Schedule?.Time ?? "09:00")" />
                    </div>
                </div>
                
                <div id="triggerSettings" class="@(Model.DeliveryConfig?.Type == "trigger" ? "" : "d-none")">
                    <h6 class="mt-3">Trigger Settings</h6>
                    <div class="mb-3">
                        <label class="form-label">Trigger Event</label>
                        <select class="form-select" name="DeliveryConfig.Trigger.Type">
                            <option value="ticket-closed" @(Model.DeliveryConfig?.Trigger?.Type == "ticket-closed" ? "selected" : "")>Ticket Closed</option>
                            <option value="new-customer" @(Model.DeliveryConfig?.Trigger?.Type == "new-customer" ? "selected" : "")>New Customer</option>
                            <option value="purchase-completed" @(Model.DeliveryConfig?.Trigger?.Type == "purchase-completed" ? "selected" : "")>Purchase Completed</option>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Delay (hours)</label>
                        <input type="number" class="form-control" name="DeliveryConfig.Trigger.DelayHours" value="@(Model.DeliveryConfig?.Trigger?.DelayHours ?? 24)" min="0" />
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="DeliveryConfig.Trigger.SendAutomatically" value="true" @(Model.DeliveryConfig?.Trigger?.SendAutomatically == true ? "checked" : "") />
                            <label class="form-check-label">Send Automatically</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mb-4 d-flex justify-content-between">
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            <button type="submit" class="btn btn-primary">Save Survey</button>
        </div>
    </form>
    
    <!-- Template for new questions -->
    <template id="questionTemplate">
        <div class="question-item card mb-3">
            <div class="card-body">
                <input type="hidden" name="Questions[INDEX].Id" value="new-RANDOM_ID" />
                
                <div class="mb-3">
                    <label class="form-label">Question Title</label>
                    <input type="text" class="form-control" name="Questions[INDEX].Title" value="New Question" required />
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Question Type</label>
                    <select class="form-select question-type" name="Questions[INDEX].Type" data-index="INDEX">
                        <option value="text">Text</option>
                        <option value="single-choice">Single Choice</option>
                        <option value="multiple-choice">Multiple Choice</option>
                        <option value="rating">Rating</option>
                    </select>
                </div>
                
                <div class="mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="Questions[INDEX].Required" value="true" checked />
                        <label class="form-check-label">Required</label>
                    </div>
                </div>
                
                <div class="options-container d-none">
                    <label class="form-label">Options</label>
                    <div class="options-list">
                        <div class="input-group mb-2">
                            <input type="text" class="form-control" name="Questions[INDEX].Options[0]" value="Option 1" />
                            <button type="button" class="btn btn-outline-danger remove-option">Remove</button>
                        </div>
                        <div class="input-group mb-2">
                            <input type="text" class="form-control" name="Questions[INDEX].Options[1]" value="Option 2" />
                            <button type="button" class="btn btn-outline-danger remove-option">Remove</button>
                        </div>
                        <div class="input-group mb-2">
                            <input type="text" class="form-control" name="Questions[INDEX].Options[2]" value="Option 3" />
                            <button type="button" class="btn btn-outline-danger remove-option">Remove</button>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-secondary btn-sm add-option mt-2">Add Option</button>
                </div>
                
                <div class="d-flex justify-content-end mt-3">
                    <button type="button" class="btn btn-outline-danger btn-sm remove-question">Remove Question</button>
                </div>
            </div>
        </div>
    </template>
    
    <!-- Template for new options -->
    <template id="optionTemplate">
        <div class="input-group mb-2">
            <input type="text" class="form-control" name="Questions[INDEX].Options[OPTION_INDEX]" value="New Option" />
            <button type="button" class="btn btn-outline-danger remove-option">Remove</button>
        </div>
    </template>
    
    <!-- Template for new email -->
    <template id="emailTemplate">
        <div class="input-group mb-2">
            <input type="email" class="form-control" name="DeliveryConfig.EmailAddresses[EMAIL_INDEX]" value="EMAIL_VALUE" />
            <button type="button" class="btn btn-outline-danger remove-email">Remove</button>
        </div>
    </template>
</div>

<!-- JSON Console logging for debugging -->
<div style="display:none" id="surveyJsonData">@ViewBag.SurveyJson</div>

@section Scripts {
    <script src="~/js/survey-json-logging.js"></script>
    <script>
        // Log survey data to console
        document.addEventListener('DOMContentLoaded', function() {
            const jsonData = document.getElementById('surveyJsonData').textContent;
            if (jsonData) {
                console.log('Survey Data (JSON):', JSON.parse(jsonData));
            }
            
            // Log form submission
            const form = document.querySelector('form');
            form.addEventListener('submit', function() {
                console.log('Form submitted - collecting data for console...');
                // Create an object to hold all form data
                const formData = new FormData(form);
                const data = {};
                
                // Group the data properly
                for (let [key, value] of formData.entries()) {
                    if (key.includes('.')) {
                        const parts = key.split('.');
                        const groupName = parts[0];
                        const propName = parts.slice(1).join('.');
                        
                        if (!data[groupName]) {
                            data[groupName] = {};
                        }
                        
                        let current = data[groupName];
                        const propParts = propName.split('.');
                        
                        for (let i = 0; i < propParts.length - 1; i++) {
                            const part = propParts[i];
                            if (!current[part]) {
                                current[part] = {};
                            }
                            current = current[part];
                        }
                        
                        current[propParts[propParts.length - 1]] = value;
                    } else if (key.includes('[')) {
                        // Handle array properties
                        const match = key.match(/([^\[]+)\[(\d+)\](?:\.(.+))?/);
                        if (match) {
                            const arrayName = match[1];
                            const index = parseInt(match[2]);
                            const propName = match[3];
                            
                            if (!data[arrayName]) {
                                data[arrayName] = [];
                            }
                            
                            if (!data[arrayName][index]) {
                                data[arrayName][index] = {};
                            }
                            
                            if (propName) {
                                data[arrayName][index][propName] = value;
                            } else {
                                data[arrayName][index] = value;
                            }
                        }
                    } else {
                        data[key] = value;
                    }
                }
                
                console.log('Form Submission Data (JSON):', JSON.stringify(data, null, 2));
            });
        });
    </script>
}
